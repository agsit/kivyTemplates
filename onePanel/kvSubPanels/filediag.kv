#:kivy 1.10.0
#
# Decription:
#   This is a layout use for a typical file selection sub-panel. It has a push button to allow the
#   user to select a file using a file dialog window and a label showing which file was selected.
#
# Author: Francois Charette, Ph.D.
# Created:  September 27, 2017
#===================================================================================================
# create a new Kivy class "FileDiag" based on BoxLayout.
# Note: Kivy classes MUST start with a capital.
<FileDiag@BoxLayout>:
  # Define properties that can be accessed directly in python instead of using the Kivy "ids"
  # dictionary to access the various widgets properties. This adds a little bit of overhead
  # here since the Python properties have to be defined, but it also makes for slightly
  # cleaner coding since the property "ids" does not have to be called all over the place (this
  # is not really beneficial if there is only a single Kivy panel in the App, but it can be quite
  # beneficial when you have multiple levels of sub-panels/classes)
  #
  # Python properties
  lblFilePath: kvLblFilePath
  selectButton: kvSelectButton
  # Customize some layout attributes
  orientation: 'horizontal'
  size_hint_y: None
  size_hint_x: 1
  height: 33
  pos_hint: {'top' : 1}
  padding: 2
  spacing: 2

  Button:
    id: kvSelectButton
    text: 'Select File ...'
    size_hint_x: None
    width: 100
    # access the method in the python app class, i.e.,
    on_press: app.selectFile()

  Label:
    id: kvLblFilePath
    text: '  No file selected.'
    color: 0, 0, 0, 1
    halign: 'left'
    valign: 'middle'
    markup: True
    # Need to use canvas to change the background color.
    canvas.before:
      Color:
        rgba: 1, 1, 1, 1
      Rectangle:
        pos: self.pos
        size: self.size
    # Need to slightly adjust the position and size so that the
    # canvas align nicely with the associated button on the left.
    size_hint_y: .96
    pos_hint: {'y' : .05}
    # The following line is required to force the label to be refreshed
    # and displayed correctly after the canvas is applied.
    text_size: self.size
